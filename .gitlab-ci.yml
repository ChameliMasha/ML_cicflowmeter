image: python:3.7

stages:
  - test
  - build
  - release
  - integration test
  - deploy

services:
  - postgres:alpine

variables:
  POSTGRES_DB: test_database
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST_AUTH_METHOD: trust
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

before_script:
  - pip install -U pip
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install tox twine

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - .cache/
    - .tox/
    - venv/

linter:
  stage: test
  allow_failure: true
  script:
    - tox -e linter

test:
  stage: test
  script:
    - tox -e py37
  artifacts:
    when: always
    reports:
      junit: report.xml

build:
  stage: build
  script:
    - make build
    - tox -e pypi
    - make install
    - cicflowmeter -h
  needs: [test]
  artifacts:
    paths:
      - dist/

release:
  stage: release
  script:
    - twine upload dist/* -u "__token__" -p $TWINE_TOKEN
  when: manual
  artifacts:
    paths:
      - dist
  only:
    - tags

integrate:
  stage: integration test
  script:
    - sudo docker ps
  needs:
    - linter
    - test
    - build

deploy:
  stage: deploy
  script: echo "Deploy here"
  when: manual
  needs: [integrate]
